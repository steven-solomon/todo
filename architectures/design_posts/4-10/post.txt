So the work begins ...
My initial use-case is to return all the tasks. You will notice at first we don't have any. This is a strange case but it's usually a necessary one to cover when unit testing. The architecture is based on Bob Martin's Clean architecture http://blog.8thlight.com/uncle-bob/2012/08/13/the-clean-architecture.html. The flow of control is some external actor which requests all tasks, the tasks are retrieved and then handed to the presenter's display method.

My original plan was to use some sort of CommonJS framework to provide injection of desired objects. This was painful until I realized that such a thing being a core part of my app was itself a violation of what I'm attempting to show; How to build an app isolated from all the rapidly changing frameworks.

Asynchronous callbacks have always bothered me. "I want to thing in terms of synchronous calls" I would say to myself. After much thought I realized that the only level of abstraction I can hope for is to simply wrap everything in a callback style regardless of it's implementation. As visually ugly as I think this is, it is the only true way to ignore the implementation detail of sync vs async.